prototype(Neos.Neos:Content) {
    attributes.class = ${(q(node).property('class') ? Array.join(q(node).property('class'), ' ') : '') + (q(node).property('classInput') ? ' ' + q(node).property('classInput') : '')}
    wrapClasses = ${q(node).property('wrap') ? Array.join(q(node).property('wrap'), ' ') : ''}
    wrapClasses.@process.extra {
        expression = ${q(node).property('wrapInput') ? value + ' ' + q(node).property('wrapInput') : value}
    }
    @process.wrapper {
        expression = ${this.wrapClasses ? '<div class="' + this.wrapClasses + '">' + value + '</div>' : value}
        @position = 'end 9999999999'
    }
}

prototype(Neos.Neos:ContentCollection) {
    attributes.class = ${(q(node).property('class') ? Array.join(q(node).property('class'), ' ') : '') + (q(node).property('classInput') ? ' ' + q(node).property('classInput') : '')}
    wrapClasses = ${q(node).property('wrap') ? Array.join(q(node).property('wrap'), ' ') : ''}
    wrapClasses.@process.extra {
        expression = ${q(node).property('wrapInput') ? value + ' ' + q(node).property('wrapInput') : value}
    }
    @process.wrapper {
        expression = ${this.wrapClasses ? '<div class="' + this.wrapClasses + '">' + value + '</div>' : value}
        @position = 'end 9999999999'
    }
}

prototype(Lelesys.Common.NeosProject:Container) {
    content = Neos.Neos:ContentCollection {
        nodePath = 'content'
    }
}

prototype(Neos.NodeTypes.ColumnLayouts:MultiColumn) {
    attributes.class >
    attributes.class = 'row'
}

prototype(Neos.NodeTypes.ColumnLayouts:MultiColumnItem) {
    attributes.class >
    attributes.class = ${'col-12 col-lg-' + String.split(q(node).parent().property('layout'), '-')[columnIteration.index] + ' col-sm-' + String.split(q(node).parent().property('layout'), '-')[columnIteration.index]}
}